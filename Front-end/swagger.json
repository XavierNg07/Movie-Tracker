{
  "swagger": "2.0",
  "info": {
    "description": "This is a COMP 4537 group project. This Movie API helps users keep track of their favorite movies.",
    "version": "1.1.0",
    "title": "Movie Tracker"
  },
  "host": "https://xg-web.store/movie-tracker",
  "basePath": "/API/V1",
  "tags": [
    {
      "name": "watch-list",
      "description": "Everything about your Pets"
    },
    {
      "name": "favorite-list",
      "description": "Access to Petstore orders"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "admin",
      "description": "Operations about admin"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/watchlist": {
      "post": {
        "tags": [
          "watch-list"
        ],
        "summary": "Add a movie to the user's watch-list",
        "description": "",
        "operationId": "addWatchMovie",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Movie object that needs to be added to the watch list.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "tags": [
          "watch-list"
        ],
        "summary": "Grab all the movies inside the user's watch-list",
        "description": "A user can have multiple movies inside their watch-list. This URI will grab them all and return a json.",
        "operationId": "getMovieList",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/watchlist/{id}": {
      "delete": {
        "tags": [
          "watch-list"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the movie you want to delete.",
            "required": true,
            "type": "integer"
          }
        ],
        "summary": "Delete the currently selected watch list item.",
        "description": "Allow users to remove a movie in their watch list.",
        "operationId": "removeMovieList",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Display all total amount of request sent to all URI",
        "description": "Returns a list of objects. Each contains information on each URI and the amount of request sent to them.",
        "operationId": "getAdminStats",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EndpointsObj"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/favoritelist": {
      "post": {
        "tags": [
          "favorite-list"
        ],
        "summary": "Add a movie to the user's favorite-list",
        "description": "",
        "operationId": "addFavoriteMovie",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Movie object that needs to be added to the favorite list.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "tags": [
          "favorite-list"
        ],
        "summary": "Grab all the movies inside the user's favorite-list",
        "description": "A user can have multiple movies inside their favorite-list. This URI will grab them all and return a json.",
        "operationId": "getFavoriteMovieList",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/favoritelist/{id}": {
      "delete": {
        "tags": [
          "favorite-list"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the movie you want to delete.",
            "required": true,
            "type": "integer"
          }
        ],
        "summary": "Delete the currently selected favorite list item.",
        "description": "Allow users to remove a movie in their favorite list.",
        "operationId": "removeFavMovieList",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/signUp": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user",
        "description": "Add a new user to the database and grant them authentication to the website.",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for sign up",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for sign up",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the website",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs the user out of the website",
        "description": "Clear the cookies the authorizes the user on our website.",
        "operationId": "loginOutUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/changePassword": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Change the password of user.",
        "description": "Enter a new password and alter the user's password on the database.",
        "operationId": "changePassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user information for the profile page.",
        "description": "",
        "operationId": "profileUser",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Endpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 12
        },
        "method": {
          "type": "string",
          "example": "GET"
        },
        "api": {
          "type": "string",
          "example": "/API/V1/watchList"
        },
        "requests": {
          "type": "integer",
          "format": "int64",
          "example": 25
        }
      }
    },
    "EndpointsObj": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Endpoint"
          }
        }
      }
    },
    "Movie": {
      "type": "object",
      "required": [
        "watchlist_id",
        "name",
        "overview",
        "posterPath",
        "rating"
      ],
      "properties": {
        "watchlist_id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Spider-Man: No Way Home"
        },
        "overview": {
          "type": "string",
          "example": "Spider-Man got lost in NYC subway"
        },
        "posterPath": {
          "type": "string",
          "example": "https://image.tmdb.org/t/p/w154//4j0PNHkMr5ax3IA8tjtxcmPU3QT.jpg"
        },
        "rating": {
          "type": "integer",
          "example": "6.9"
        }
      }
    }
  }
}